body,
html {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  min-height: -webkit-fill-available;
  /* height: 100vh; */
  height: 100%;
  overflow: hidden;
}
body {
  -webkit-overflow-scrolling: touch;
  min-height: -webkit-fill-available;
  height: 100vh;
  height: 100%;
}

.wrap {
  perspective: calc(var(--cube-width) * 3);
  --cube-width: 100vw;
  --cube-height: 100%;
  width: var(--cube-width);
  height: var(--cube-height);
  perspective-origin: center;
  box-sizing: border-box;
}
.cube {
  position: relative;
  width: var(--cube-width);
  height: var(--cube-height);
  transform-style: preserve-3d;
  transition: 1s cubic-bezier(0.4, 0, 0.2, 1);
  transform: translateZ(-50vw);
}

.cube-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  flex-wrap: nowrap;
  align-items: center;

  -webkit-overflow-scrolling: touch;
  overflow: hidden;
  height: 100%;
}

#back:checked ~ .wrap .back .cube-content,
#left:checked ~ .wrap .left .cube-content,
#front:checked ~ .wrap .front .cube-content,
#front:checked ~ .wrap .front .cube-content,
#right:checked ~ .wrap .right .cube-content,
#random:checked ~ .wrap .right .cube-content {
  overflow-y: scroll;
  /* overflow-y: auto; */
}

.cube > .cube-face {
  position: absolute;
  width: calc(var(--cube-width) - 0rem);
  height: calc(var(--cube-height) - 0rem);
  transition: 0.3s;
  z-index: 1;
  box-shadow: inset 0 0 0px 9px #ffa200;
  padding: 1rem;
}

#right:checked ~ .wrap .cube {
  transform: translateZ(-50vw) rotateY(-90deg);
}

#back:checked ~ .wrap .cube {
  transform: translateZ(-50vw) rotateY(180deg);
}
#random:checked ~ .wrap .cube {
  transform: translateZ(-50vw) rotateY(calc(-90deg + 720deg));
}
#left:checked ~ .wrap .cube {
  transform: translateZ(-50vw) rotateY(90deg);
}
#bottom:target ~ .wrap .cube {
  transform: translateZ(-50vw) rotateY(0deg) rotateX(90deg);
}

.front {
  background-color: #0000006e;
  background-image: linear-gradient(to top, rgb(9 32 63 / 90%) 0%, rgb(83 120 149 / 90) 100%);

  color: white;
  transform: rotateY(0) translateZ(calc(var(--cube-width) / 2));
  /* z-index: 1; */
}

.back {
  background-color: rgb(30 150 0 / 90%);
  background: linear-gradient(to right, rgb(255 0 0 / 90%), rgb(255 242 0 / 90%), rgb(30 150 0 / 90%));
  color: white;
  transform: rotateY(-180deg) translateZ(calc(1 * var(--cube-width) / 2));
  /* z-index: 1; */
}

.right {
  background-color: rgba(250, 128, 114, 0.411);
  transform: rotateY(90deg) translateX(calc(var(--cube-width) / 2));
  transform-origin: top right;
  /* z-index: 1; */
}

.left {
  background-color: rgb(217 175 217 / 50%);
  background-image: linear-gradient(to top, rgb(48 207 208 / 90%) 0%, rgb(51 8 103 / 90%) 100%);
  transform: rotateY(-90deg) translateX(calc(-1 * var(--cube-width) / 2));
  transform-origin: center left;
  /* z-index: 1; */
}

.top {
  background-color: rgb(0 128 128 / 75%);
  transform: rotateX(-90deg) translateY(calc(-1 * var(--cube-width) / 2));
  transform-origin: top center;
  /* z-index: 1; */
}

.bottom {
  background-color: rgb(138 43 226 / 75%);
  transform: rotateX(90deg) translateY(calc(-1 * var(--cube-width) / 2));
  transform-origin: bottom center;
  /* z-index: 1; */
}

label {
  color: white;
  background: black;
  cursor: pointer;
  padding: 1rem;
  border-radius: 1rem;
  transition: 0.15s;
  border: none;
  font-size: 1rem;
  margin: 0.5rem;
  box-shadow: 0 0 0 1px rgba(255, 255, 255, 0.5), inset 0 0 0 0 rgba(255, 255, 255, 0.5);
}

label.active {
  padding: 2rem;
}
* {
  box-sizing: border-box;
}

body > label,
body > input {
  display: none;
}
